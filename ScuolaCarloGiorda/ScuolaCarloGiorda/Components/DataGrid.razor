@typeparam TColumn
@using System.Data.SqlClient
@typeparam TRow

<table>
    <thead>
    <th></th>
    @foreach (var column in Columns)
    {
        <th>@ColumnProperty.Invoke(column)</th>
    }
    </thead>
    <tbody>
    @foreach (var row in Rows)
    {
        <tr>
            <td>@RowProperty.Invoke(row)</td>
            @foreach (var column in Columns)
            {
                string data = "";
                
                bool presence =GetData.Invoke(row,column);
                if (presence)
                {
                    data = "x";
                }
                <td>
        <input type="text" value="@data" @onchange="args => OnChangeValueEventHandler(args,row,column) "/>
                </td>
            }
        </tr>
    }
    </tbody>
</table>

@code
{
    

    [Parameter]
    public List<TRow> Rows { get; set; }

    [Parameter]
    public List<TColumn> Columns { get; set; }

    [Parameter]
    public Func<TColumn, string> ColumnProperty { get; set; }

    [Parameter]
    public Func<TRow, string> RowProperty { get; set; }
    
    [Parameter]
    public Func<TRow,TColumn, bool> GetData { get; set; }
    [Parameter]
    public  Func<  TRow  , TColumn ,  bool,bool > SetData { get; set; }


    protected override void OnInitialized()
    {
    }

    private void OnChangeValueEventHandler(ChangeEventArgs args, TRow row, TColumn column)
    {
        string value = (string) args.Value;
        bool presence = (value == "x" || value == "X");
      SetData.Invoke(row,column,presence);
        
     
    }
}